---
- name: '[main] Set up en_US.UTF-8 locale'
  locale_gen:
    name: en_US.UTF-8
    state: present
  become: yes
  tags:
    - bootstrap_core

#========== DISTRO UPGRADE ===========
- name: '[main] Upgrading distro'
  apt: upgrade=dist autoclean=yes autoremove=yes
  become: yes
  when: ansible_os_family == 'Debian'
  tags:
    - bootstrap_core
#=====================================

#========= UPDATING FIRMWARE: ========
# needs: echo 'nameserver 8.8.8.8' > /etc/resolv.conf
# which is done in 'expandfs' role.
- name: '[main] Installing latest rpi-update'
  apt: name=rpi-update state=latest force=yes
  become: yes
  when:
    - bootstrap_core_firmware_update
    - ansible_os_family == 'Debian'
  tags:
    - bootstrap_core

- name: '[main] Updating firmware'
  command: rpi-update
  become: yes
  when:
    - bootstrap_core_firmware_update
    - ansible_os_family == 'Debian'
  tags:
    - bootstrap_core
#=====================================

#========= ADDUSER WORKAROUND =======
# The ansible 'user' module seems to use 'useradd' tool on linux.
# There is no way to make it use 'adduser' instead, and causes problem.
# So this is an ugly workaround provided for information purposes.
# BTW, it works!
#
#- name: '[create_users] == RED OUTPUT IS OK == Check if users do not already exist'
#  command: "id -u {{ item.username }}"
#  register: bootstrap_core_users_stat
#  with_items: "{{ bootstrap_core_users }}"
#  ignore_errors: true
#  changed_when: false
#  tags:
#    - bootstrap_core
#
#- name: '[create_users] Flatten bootstrap_core_users_stat dictionary'
#  set_fact:
#    bootstrap_core_users_exist: "{{ bootstrap_core_users_exist|default({}) | combine( {item.item.username: item.rc} ) }}"
#  with_items: "{{ bootstrap_core_users_stat.results }}"
#  tags:
#    - bootstrap_core
#
#- name: '[create_users] Check if the group exists in the system'
#  shell: "getent group | cut -d: -f1"
#  register: bootstrap_core_system_groups
#  changed_when: false
#  tags:
#    - bootstrap_core
#
#- name: '[create_users] Create specified users using "adduser" only when they (and the groups with same name) do not exist'
#  shell: echo "{{ item.passwd }}
#    {{ item.passwd }}" | adduser "{{ item.username }}"
#  with_items: "{{ bootstrap_core_users }}"
#  become: yes
#  when:
#    - bootstrap_core_users_exist.{{ item.username }} != 0  # Produces Warning. I haven't find the way to get rid of '{'
#    - item.username not in bootstrap_core_system_groups.stdout_lines
#  tags:
#    - bootstrap_core
#
## There may be situation when the user we want to create already exists
## and is used for provisioning by current ansible process.
## then changing the password will break the role execution with "Authentication failed" error.
#- name: '[create_users] Set passwords for users only when user is not currently authenticated for this provisioning'
#  user: name={{ item.username }} password={{ item.passwd }}
#  with_items: "{{ bootstrap_core_users }}"
#  become: yes
#  when: item.username != ansible_user_id
#  tags:
#    - bootstrap_core
#
#- name: '[create_users] Add users to corresponding groups only if these groups exist'
#  user: name={{ item[0].username }} groups={{ item[1] }} append=yes
#  with_subelements:
#    - "{{ bootstrap_core_users }}"
#    - groups
#  when: item[1] in bootstrap_core_system_groups.stdout_lines
#  become: yes
#  tags:
#    - bootstrap_core
...
